apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: install-node-latest
spec:
  params:
    - name: node-version
      type: string
      default: "v23"  # Default Node.js version if not provided
    - name: npm-version
      type: string
      default: ""  # Default to empty if npm version not provided
  workspaces:
    - name: output
      mountPath: /artifacts
  steps:
    - name: execute
      image: node:20  # Use a more complete Node.js image
      script: |
        #!/bin/bash

        # Get the Node.js version to install
        NODE_VERSION="$(params.node-version)"
        echo "Node.js version to install: $NODE_VERSION"

        # Install NVM if not already installed
        if ! command -v nvm &> /dev/null; then
          echo "NVM not found. Installing NVM..."
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          echo "NVM installed."
        else
          echo "NVM is already installed."
        fi

        # Attempt to install the specified Node.js version using the RC mirror
        echo "Attempting to install Node.js version $NODE_VERSION using RC mirror..."
        NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/rc nvm install "$NODE_VERSION" || {
          echo "RC installation failed. Attempting to install Node.js version $NODE_VERSION using Nightly mirror..."
          NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly nvm install "$NODE_VERSION"
        }

        # Set the installed version as default
        echo "Setting Node.js version $NODE_VERSION as default..."
        nvm alias default "$NODE_VERSION"

        # Save the Node.js version to a file in the artifacts
        echo "$NODE_VERSION" > /artifacts/node-version

        # Display the installed Node.js version
        echo "Node.js version installed:"
        echo "$(node -v)"
